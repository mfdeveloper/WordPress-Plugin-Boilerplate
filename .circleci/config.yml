# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # - image: circleci/php:7.1.5-browsers
      - image: mfdeveloper/wordpress-ci:latest
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: mysql:5.7
        environment:
            MYSQL_ALLOW_EMPTY_PASSWORD: yes
            MYSQL_ROOT_PASSWORD: ''
            MYSQL_DATABASE: ${DB_TEST_NAME}
            MYSQL_USER: ${DB_TEST_USER}
            MYSQL_PASSWORD: ${DB_TEST_PASSWORD}

    working_directory: ~/repo

    steps:
      - run:
          name: Clone WP installation
          working_directory: ~/app
          command: git clone https://github.com/mfdeveloper/wordpress-docker-compose.git . && mkdir -p ./wp-content/plugins
      
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "composer.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Copy plugin to plugins folder
          command: cp -R -f plugin-name ~/app/wp-content/plugins/plugin-name
      - run:
          name: Install dependencies
          working_directory: ~/app
          command: composer install -n --prefer-dist

      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "~/app/composer.json" }}

      - run:
          name: Wait for DB
          # preinstalled in circleci/* docker image
          command: >-
            if [ -z "$DB_TEST_HOST" ]; then
                DB_TEST_HOST=127.0.0.1:3306
            fi

            dockerize -wait tcp://$DB_TEST_HOST -timeout 120s
      - run:
          name: Run tests
          working_directory: ~/app
          command: composer test -- --install --plugin plugin-name